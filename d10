local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Tutorial Script Hub",
    LoadingTitle = "Tutorial Script Hub",
    LoadingSubtitle = "by Rolo",
    Theme = "Ocean",
    ToggleUIKeybind = "K",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil,
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink",
       RememberJoins = true
    },
    KeySystem = false
})

local PlayerTab = Window:CreateTab("Player", 4483362458)
local PlayerSection = PlayerTab:CreateSection("Player Settings")

local plr = game.Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local hum = char:WaitForChild("Humanoid")
local hrp = char:WaitForChild("HumanoidRootPart")

-- ערכי ברירת מחדל
local WalkSpeedValue = 10 -- כפי שאתה אוהב בסליידר
local SpeedVolume = 1
local JumpHeightValue = 50
local DashLengthValue = 50

-- עדכון אחרי Respawn
plr.CharacterAdded:Connect(function(c)
    char = c
    hum = c:WaitForChild("Humanoid")
    hrp = c:WaitForChild("HumanoidRootPart")
end)

-- WalkSpeed Slider (כמו הסגנון שלך)
local Slider = PlayerTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {1, 10},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = WalkSpeedValue,
    Flag = "Slider1",
    Callback = function(Value)
        WalkSpeedValue = Value
        plr.Character:SetAttribute("SpeedMultiplier", Value) -- לשמור את הערך ב-Attribute
    end,
})

-- Speed Volume Slider
local SliderVol = PlayerTab:CreateSlider({
    Name = "Speed Volume",
    Range = {0.1, 2},
    Increment = 0.1,
    Suffix = "x",
    CurrentValue = SpeedVolume,
    Flag = "SliderVol",
    Callback = function(Value)
        SpeedVolume = Value
    end,
})

-- JumpHeight Slider
local SliderJump = PlayerTab:CreateSlider({
    Name = "Jump Height",
    Range = {50, 500},
    Increment = 1,
    Suffix = "Height",
    CurrentValue = JumpHeightValue,
    Flag = "Slider2",
    Callback = function(Value)
        JumpHeightValue = Value
        plr.Character:SetAttribute("JumpHeight", Value)
    end,
})

-- DashLength Slider
local SliderDash = PlayerTab:CreateSlider({
    Name = "Dash Length",
    Range = {10, 1000},
    Increment = 10,
    Suffix = "Studs",
    CurrentValue = DashLengthValue,
    Flag = "Slider3",
    Callback = function(Value)
        DashLengthValue = Value
        plr.Character:SetAttribute("DashLength", Value)
    end,
})

-- Heartbeat ל־WalkSpeed עם Volume
game:GetService("RunService").Heartbeat:Connect(function()
    if hrp and hum.MoveDirection.Magnitude > 0 then
        local direction = hum.MoveDirection.Unit
        local currentVel = hrp.Velocity
        local targetVel = direction * WalkSpeedValue * SpeedVolume
        hrp.Velocity = Vector3.new(targetVel.X, currentVel.Y, targetVel.Z)
    end
end)

-- קפיצה עם JumpHeight
hum:GetPropertyChangedSignal("Jump"):Connect(function()
    if hum.Jump then
        hrp.Velocity = Vector3.new(hrp.Velocity.X, JumpHeightValue, hrp.Velocity.Z)
    end
end)

-- Dash עם Q
game:GetService("UserInputService").InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.Q and hrp then
        hrp.CFrame = hrp.CFrame + (hum.MoveDirection * DashLengthValue)
    end
end)
